/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import org.example.entities.Train;
import org.example.entities.User;
import org.example.services.UserBookingService;
import org.example.util.UserServiceUtil;

import java.io.IOException;
import java.util.*;

public class App {

    public static void main(String[] args) {
        System.out.println("Running Train Booking System");
        Scanner scanner = new Scanner(System.in);

        int option = 0;
        UserBookingService userBookingService;

        try {
            userBookingService = new UserBookingService();
        }catch(IOException ex){
            System.out.println("There is something wrong: " + ex.getMessage());
            return;
        }
        Train trainSelectedForBooking = null;
        while(option != 7){
            System.out.println("Please choose one of the following options");
            System.out.println("1. Sign up");
            System.out.println("2. Login");
            System.out.println("3. Fetch Booking Details");
            System.out.println("4. Search Trains");
            System.out.println("5. Book a Seat");
            System.out.println("6. Cancel Booking");
            System.out.println("7. Exit");
            option = scanner.nextInt();


            switch (option){
                case 1:
                    System.out.println("Enter Username");
                    String nameToSignup = scanner.next();
                    System.out.println("Enter Password");
                    String passwordToSignup = scanner.next();
                    User userToSignup = new User(nameToSignup, passwordToSignup, UserServiceUtil.hashPassword(passwordToSignup), new ArrayList<>(), UUID.randomUUID().toString());
                    userBookingService.signUp(userToSignup);
                    break;
                case 2:
                    System.out.println("Enter Username");
                    String nameToLogin = scanner.next();
                    System.out.println("Enter Password");
                    String passwordToLogin = scanner.next();
                    User userToLogin = new User(nameToLogin, passwordToLogin, UserServiceUtil.hashPassword(passwordToLogin), new ArrayList<>(), UUID.randomUUID().toString());
                    try {
                        userBookingService = new UserBookingService(userToLogin);
                    }catch(IOException ex){
                        return;
                    }
                    break;
                case 3:
                    System.out.println("Fetching Booking Details");
                    userBookingService.fetchBooking();
                    break;
                case 4:
                    System.out.println("Source station");
                    String sourceStation = new Scanner(System.in).next();
                    System.out.println("Destination station");
                    String destinationStation = new Scanner(System.in).next();
                    List<Train> trains = userBookingService.getTrains(sourceStation,destinationStation);
                    int index = 1;
                    for(Train t : trains){
                        System.out.println(index+" Train id: "+t.getTrainId());
                        for(Map.Entry<String, String> entry: t.getStationTimes().entrySet()){
                            System.out.println("Station: "+entry.getKey()+" Time: "+entry.getValue());
                        }
                        index++;
                    }
                    System.out.println("Select a train by typing the index number ");
                    trainSelectedForBooking = trains.get(scanner.nextInt()-1);
                    break;
                case 5:
                    if (trainSelectedForBooking == null) {
                        System.out.println("Please search and select a train first (Option 4).");
                        break;
                    }
                    System.out.println("Select a seat out of these seats");
                    List<List<Integer>> seats = userBookingService.fetchSeats(trainSelectedForBooking);
                    for(List<Integer> rows : seats){
                        for(Integer val: rows){
                            System.out.println(val+ " ");
                        }
                        System.out.println();
                    }
                    System.out.println("Select the seat by selecting the row and column");
                    System.out.println("Enter the row number: ");
                    int row = scanner.nextInt();
                    System.out.println("Enter the column number: ");
                    int col = scanner.nextInt();
                    System.out.println("Booking in progress......");
                    Boolean booked = userBookingService.bookTrainSeat(trainSelectedForBooking,row,col);
                    if(booked.equals(Boolean.TRUE)){
                        System.out.println("Booked! Have a safe journey");
                    }
                    else{
                        System.out.println("Unable to book this seat");
                    }
                    break;
                case 6:
                    break;
                default:
                    break;

            }
        }
    }
}
